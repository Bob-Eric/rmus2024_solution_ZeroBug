###########################################################################################
## NOTE: Costmap conversion is experimental. Its purpose is to combine many point        ##
## obstales into clusters, computed in a separate thread in order to improve the overall ##
## efficiency of local planning. However, the implemented conversion algorithms are in a ##
## very early stage of development. Contributions are welcome!                           ##
###########################################################################################

TebLocalPlannerROS:
  ## Costmap converter plugin
  costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSMCCH"
  # costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSRANSAC"
  #costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSMCCH"
  #costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSConcaveHull"
  costmap_converter_spin_thread: True
  costmap_converter_rate: 5

  ## Configure plugins (namespace move_base/costmap_to_lines or move_base/costmap_to_polygons)
  # costmap_converter/CostmapToLinesDBSRANSAC:
  ## costmap_converter/CostmapToLinesDBSRANSAC, costmap_converter/CostmapToLinesDBSMCCH, costmap_converter/CostmapToPolygonsDBSMCCH
  # costmap_converter/CostmapToLinesDBSRANSAC:
  #   cluster_max_distance: 0.4
  #   cluster_min_pts: 2
  #   ransac_inlier_distance: 0.15
  #   ransac_min_inliers: 10
  #   ransac_no_iterations: 1500
  #   ransac_remainig_outliers: 3
  #   ransac_convert_outlier_pts: True
  #   ransac_filter_remaining_outlier_pts: False
  #   convex_hull_min_pt_separation: 0.1

  odom_topic: /ep/odom
  # Trajectory
  teb_autosize: True
  dt_ref: 0.3
  dt_hysteresis: 0.03
  min_samples: 5 # default
  global_plan_overwrite_orientation: True
  global_plan_viapoint_sep: 0.1 # not fine-tuned
  allow_init_with_backwards_motion: True
  max_global_plan_lookahead_dist: 2.0
  feasibility_check_no_poses: 4
  exact_arc_length: False

  # Robot
  max_vel_x: 0.4
  max_vel_x_backwards: 0.2
  max_vel_y: 0.4 # for omnidirection
  max_vel_theta: 0.4
  acc_lim_x: 1.0
  acc_lim_y: 1.0 # for omnidirection
  acc_lim_theta: 1.0

  is_footprint_dynamic: False
  min_turning_radius: 0.0 # diff-drive robot (can turn on place!)
  wheelbase: 0.0

  footprint_model:
    type: "polygon"
    vertices: [[-0.16, -0.12], [-0.16, 0.12], [0.16, 0.12], [0.16, -0.12]] # 2D shape of the robot

  # GoalTolerance
  xy_goal_tolerance: 0.1
  yaw_goal_tolerance: 0.1
  free_goal_vel: False

  # Obstacles
  min_obstacle_dist: 0.05 # 0.05 # a small value may be prefered
  include_costmap_obstacles: True
  costmap_obstacles_behind_robot_dist: 1.0
  obstacle_poses_affected: 30
  inflaion_dist: 0.1 # not fine-tuned

  # Optimization
  no_inner_iterations: 10 # may be enough
  no_outer_iterations: 8 # may be enough
  optimization_activate: True
  optimization_verbose: False
  penalty_epsilon: 0.1
  weight_max_vel_x: 0.2
  weight_max_vel_y: 0.2
  weight_max_vel_theta: 0.2
  weight_acc_lim_x: 1
  weight_acc_lim_y: 1
  weight_acc_lim_theta: 1
  weight_kinematics_nh: 0.1 # for omnidirection, a small value is preferred
  weight_kinematics_forward_drive: 1.0
  weight_kinematics_turning_radius: 0.1
  weight_optimaltime: 1 # not fine-tuned
  weight_shortest_path: 1 # not fine-tuned
  weight_obstacle: 50
  weight_dynamic_obstacle: 10 # not in use yet
  weight_adapt_factor: 2
  weight_inflation: 0.2 # not fine-tuned
  weight_viapoint: 1.0 # default

  # Homotopy Class Planner
  enable_homotopy_class_planning: True
  enable_multithreading: True
  simple_exploration: False
  max_number_classes: 8
  selection_cost_hysteresis: 1.0
  selection_obst_cost_scale: 1.0
  selection_alternative_time_cost: False

  roadmap_graph_no_samples: 15
  roadmap_graph_area_width: 5
  h_signature_prescaler: 0.5
  h_signature_threshold: 0.1
  obstacle_keypoint_offset: 0.1
  obstacle_heading_threshold: 0.45
  visualize_hc_graph: False
